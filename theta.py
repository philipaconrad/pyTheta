# theta.py -- A catalysis reaction modeled in Python.
# Copyright (c) Philip Conrad 2013 -- MIT License


from mpmath import *


#----------------------------------------------------------
# REACTION RATE CONSTANTS:

k_f = [ '6.249e7',  '1.831e3',  '9.567e2',  '8.447e3', '1.863e5', '5.509e8',   '5.982', '2.106e10',  '7.139e4',  '2.243e8',
        '2.418e7',  '1.247e8',  '1.100e2', '5.791e12', '1.114e9', '9.955e3', '5.396e2',  '3.706e3',  '2.705e8',  '7.040e9',
        '5.501e8',  '2.335e4', '1.630e10',  '6.622e2', '6.464e2', '2.109e8',   '8.910',  '3.268e5',  '1.890e5', '9.014e11',
        '7.631e3',  '6.303e2',  '1.075e2',  '9.362e7', '9.540e4', '2.636e8', '3.368e8', '1.615e10', '3.290e-3',  '1.004e3',
        '1.457e5',  '2.380e2',  '3.845e7',  '3.778e7', '9.432e3', '1.666e3', '3.094e8',  '1.557e7',  '6.575e1',  '1.372e2',
          '3.003', '3.044e13', '1.047e16', '2.092e12', '1.020e3'
]

k_b = [ '5.885e4', '3.070e6',  '2.885e7', '8.560e1',    '8.721',  '3.131e5', '6.828e-12',  '4.823e3',   '1.020e4',    '1.566',
        '5.024e5', '3.056e6', '6.318e-1', '1.247e8', '8.518e-3', '6.388e10',   '1.625e7',  '1.514e5',   '4.864e5',  '1.941e2',
        '1.750e6', '8.974e1', '5.505e-2', '1.555e1',  '2.380e7',    '1.986',   '1.865e7',    '1.668',   '1.108e7',    '1.962',
       '1.902e11', '5.235e1',  '1.311e7',   '2.729',  '2.606e8',  '5.388e6',     '4.689',  '1.170e4', '2.457e-15', '1.833e-6',
       '7.225e-5', '5.142e8', '4.046e12', '9.921e9',  '3.620e7',  '2.431e7',  '1.802e13',  '2.232e8',   '7.117e7',  '6.635e7',
        '7.879e7', '1.230e8',  '1.740e8', '1.640e8',  '6.696e7'
]


#----------------------------------------------------------
# SYSTEM VARIABLE VALUES:

initialState = [
     '3.9e-10',  '4.2e-11', '3.92e-14',  '2.61e-3',  '4.75e-6', '6.21e-12',  '5.01e-8', '2.13e-11',  '5.32e-9',  '5.66e-2',
     '2.80e-7',  '2.60e-4',  '4.99e-8',  '6.69e-2',  '4.50e-3',    '0.554', '3.02e-17', '1.08e-18',  '2.21e-3',  '2.59e-6',
     '1.22e-6', '6.07e-19', '5.81e-15', '9.66e-16', '1.72e-08', '7.49e-20', '2.92e-10', '1.29e-11', '4.37e-11', '1.22e-15', 
    '1.85e-10', '4.04e-15', '6.26e-13', '2.53e-11', '3.77e-17', '3.60e-09', '7.43e-10', '1.25e-12', '4.31e-06'
]

minBounds = [
    '1e-10', '1e-30', '1e-30', '1e-40', '1e-20', '1e-25', '1e-10', '1e-20', '1e-20', '1e-30',
    '1e-20', '1e-20', '1e-20', '1e-20', '1e-20', '1e-30', '1e-25', '1e-20', '1e-20', '1e-20',
    '1e-20', '1e-25', '1e-20', '1e-20', '1e-20', '1e-20', '1e-20', '1e-20', '1e-20', '1e-30',
    '1e-20', '1e-20', '1e-20', '1e-20', '1e-30', '1e-20', '1e-20', '1e-20', '1e-30'
]

maxBounds = [
    '0.80', '0.01', '0.01', '0.80', '0.01', '0.01', '0.50', '0.01', '0.01', '0.80',
    '0.01', '0.90', '0.01',  '0.8', '0.80', '0.80', '0.80', '0.80', '0.80', '0.50',
    '0.01', '0.01', '0.01', '0.10', '0.80', '0.50', '0.10', '0.10', '0.50', '0.10',
    '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.80'
]



#----------------------------------------------------------
# FUNCTIONS:

#initList :: [pyFloat] -> [mpf]
def initList(src):
    return map(lambda x: mpf(x), src)


#----------------------------------------------------------
# MAIN:

if __name__ == '__main__':
    #--------------------------------------
    # SETUP:

    #set precision to be very high:
    mp.dps = 150

    #initialize all the lists of constants:
    k_f             = initList(k_f)
    k_b             = initList(k_b)
    initialState    = initList(initialState)
    minBounds       = initList(minBounds)
    maxBounds       = initList(maxBounds)

    #--------------------------------------
    # SOLVER:




    #--------------------------------------
    # DISPLAY RESULTS:
























